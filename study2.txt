1. 배열을 const로 선언할 때 인덱스를 바꿀 수 있는지 (가능한지, 왜가능한지)-1. 숙제 1
인덱스를 바꿀 수 있다.
const로 배열을 선언하면 배열의 시작주소가 고정된 것이기 때문이다.
push, map, shift 등의 연산은 사용 가능하다.

    * const란
      const란 재할당이 불가하고, 재선언이 불가능하다.
      반드시 선언과 동시에 할당이 이루어져야 한다. (그렇지 않으면 문법 에러가 발생한다.)  
      블록 레벨 스코프를 갖는다.
      const변수의 타입이 객체인 경우, 객체에 대한 참조 변경 불가능을 의미한다.
      but 객체의 내용은 변경 가능하다.
      최대한 const변수만을 사용하되 필요한 경우만 let키워드를 사용한다.
 
2. 인스턴스, 캡슐화, 추상화, 상속, 다형성
인스턴스 - 메모리에 클래스를 올려놓은 것
캡슐화 - 비슷한 역할을 하는 것들을 하나로 모으는 것. 정보은닉의 수단이다.
추상화 - 어떤 실체로부터 공통적인 부분이나 관심있는 특성들만 한 곳에 모은 것
상속 - 클래스를 재사용하는 것이다. 생산성과 유지보수의 용이성이 증가한다.
다형성 - 같은 모양의 함수가 상황에 따라 다르게 동작하는 것이다. (오버로딩, 오버라이딩)

3. boxed - unboxed 객체
boxing : 원시 데이터타입을 참조형으로 만들어주는 것
unboxing : 참조형 데이터 타입을 원시 데이터 타입으로 만들어 주는 것

------------------------------------------------------
1. 예외
오류 : 시스템 레벨에서 발생. 개발자가 예측할 수 없다.
예외 : 개발자가 구현한 로직에서 발생. 개발자가 처리 가능 
       예외는 발생할 상황을 미리 예측하여 처리할 수 있다.

2. fetch API
    Request나 Response와 같은 HTTP의 파이프라인을 구성하는 요소를
    조작하는 것을 가능하게 해준다.
    쿠키를 보내거나 받지 않는다.
    성공적인 fetch() 를 체크하는 정확한 방법은 promise 객체가 
    해결되었는지를 체크하는 것을 포함한다
    첫번째 인자는 url, 두번째 인자는 옵션 객체이며 Promise타입 객체를 반환한다.
    반환된 객체는 API 호출이 성공했을경우 response객체를 resolve한다
    실패했을 경우 error객체를 reject한다.

3. 파싱
    돔트리를 만드는 과정을 일컫는다.
    파싱 중 script태그를 만나면 파싱을 멈추고 스크립트를 해석한다.(dom트리를 변경시킬 수 있기 때문)
    파싱 중 css를 만나면 파싱을 그대로 진행한다.(dom트리를 변경시키지 않기 때문)





