1. 스크립트 언어와 컴파일러 언어의 차이점
스크립트 언어 : 소스코드를 컴파일하지 않고 인터프리터로 소스코드를 
                한 줄 한 줄 읽어 바로 실행하는 방식으로 동작하는 언어
                실행속도는 컴파일 언어보다 느리다
                ex) JavaScript, Python, TypeScript
컴파일 언어 : 소스코드를 컴파일 한 후 기계어를 cpu/메모리를 통해 읽어 실행하는 
                방식으로 동작하는 언어
                실행속도는 스크립트 언어보다 빠르다.
                ex) C++, Java
    * 컴파일이란
      원시 프로그램을 목적 프로그램으로 번역하는 과정
      컴파일이 끝나면 목적 파일이 생성된다.

2. 객체, structure(구조체), class의 차이가 무엇인지.
객체(Object)와 클래스(Class)의 차이점
    클래스는 객체를 만들기 위한 설계도, 객체는 설계도로 구현할 대상이라고 할 수 있다.
    자바스크립트에서는 기본 데이터형을 제외한 모든 게 객체로 구현된다.

클래스와 구조체의 차이점
    클래스는 힙에 할당되고 구조체는 스택에 할당된다.
    클래스는 참조타입(Reference Type)이지만 구조체는 값타입(Value Type)이다.
    클래스는 상속이 가능하고 구조체는 상속이 불가능하다.
        * 값타입 : 크기가 작고 고정적, 스택에 할당됨
                   값이 완전히 복사됨
                   선언 즉시 사용 가능.
          참조타입 : 크기가 크고 가변적, 힙에 할당됨
                     값이 복사되지 않고 주소를 가리킴.
                     선언 후 new를 이용해 할당해주어야 함
         <출처 : https://rsd885.tistory.com/category/C%23, T스토리 블로그>

3. prototype이란
prototype이란 객체의 원형을 뜻한다.
객체는 메소드와 프로퍼티를 가질 수 있다.
prototype의 프로퍼티는 용도가 정해져있는 특수한 프로퍼티이다.

4. 일급객체란
다른 객체들에 일반적으로 적용 가능한 연산을 모두 지원하는 객체를 가리킨다.
일반적으로 적용 가능한 연산을 보통 매개변수로 넘기기, 수정하기, 변수에 대입하기,
리턴값으로 넘기기 등이 있다.

고차 함수 : 함수를 값으로 다루는 함수
            함수를 인자로 받아서 실행하는 함수
            함수 또는 클로저를 만들어 리턴하는 함수
    * 클로저란 : 내부함수가 외부함수의 변수를 기억하고 있는 상태
                외부함수가 소멸되어도 내부함수는 외부함수의 변수에 접근 가능
                외부함수의 변수는 내부함수가 사용 시 내부함수의 소멸 후 소멸된다.
<출처 : 위키백과>
<출처 : velog>
<출처 : 생활코딩>

--------------------

1. DNS서버에서 주소를 가져오면..
도메인 네임을 검색해 브라우저가 DNS서버에서 IP주소를 가져오면 해당 IP주소는
캐시에 저장된다. 또한 이 캐시의 기간은 정보를 제공하는 네임서버에 의해 결정된다.
<출처 : 이론을 중심으로 한 TCP/IP 이해하기, 백금란, 김은환.>

2. 최상위 객체
자바 스크립트에서의 최상위 객체는 window 객체이지만
node.js는 웹 브라우저에서 동작하지 않기 때문에 최상위 객체가 없다.
그 대신 node.js는 전역변수, 전역객체, 전역 함수를 갖는다.






